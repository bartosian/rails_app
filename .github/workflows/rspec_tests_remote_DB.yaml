env:
  RAILS_ENV: test
  KIPU_URL: ${{ secrets.KIPU_URL }}
  KIS_USER_TOKEN: ${{ secrets.KIS_USER_TOKEN }}
  KIS_URL: ${{ secrets.KIS_URL }}
  CAS_HOST: ${{ secrets.CAS_HOST }}
  BUNDLE_ENTERPRISE__CONTRIBSYS__COM: ${{ secrets.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}
  BUNDLE_GITHUB__COM: ${{ secrets.BUNDLE_GITHUB__COM }}
  REDISCLOUD_URL: ${{ secrets.REDISCLOUD_URL }} 

name: rspec_tests_AWS
on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1
      - name: Print Public IP
        run: |
          echo ${{ steps.ip.outputs.ipv4 }}
          echo ${{ steps.ip.outputs.ipv6 }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Ruby version specified in `.ruby-version`
        uses: ruby/setup-ruby@v1
      - name: Install required apt packages
        run: sudo apt update && sudo apt install qt5-default libqt5webkit5-dev libxml2-dev libxslt-dev gstreamer1.0-plugins-base gstreamer1.0-tools gstreamer1.0-x postgresql-contrib libpq-dev imagemagick xvfb 
      - name: Setup cache key and directory for gems cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-use-ruby-${{ hashFiles('**/Gemfile.lock') }}
      - name: Bundle install
        run: |
          gem install bundler -v 1.17.3
          bundle config build.nokogiri --use-system-libraries
          bundle config github.com KipuDevGemsUser:dNsEPTUWMbTumnphFmtjjGb9tKKbtmxT8
          bundle config enterprise.contribsys.com aa8ac900:18a34bbd
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3   
      - name: Setup Database
        run: |
          cp config/database-remote.yml.github-actions config/database.yml
          bundle exec rake db:test:prepare
        env:
          DB_USER: ${{ secrets.DB_USER}}
          DB_PW: ${{ secrets.DB_PW }}
          DB_HOST: ${{ secrets.DB_HOST }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
        continue-on-error: true
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v2
        env:
          DB_USER: ${{ secrets.DB_USER}}
          DB_PW: ${{ secrets.DB_PW }}
          DB_HOST: ${{ secrets.DB_HOST }}   
      - name: Run RSpec
        run: RAILS_ENV=test xvfb-run -a bundle exec rspec spec/features
        env:
          DB_USER: ${{ secrets.DB_USER}}
          DB_PW: ${{ secrets.DB_PW }}
          DB_HOST: ${{ secrets.DB_HOST }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
      - name: Upload coverage results    
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage-report
          path: coverage
